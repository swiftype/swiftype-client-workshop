{
  "swagger": "2.0",
  "info": {
    "description": "Swiftype App Search API",
    "version": "1.0",
    "title": "Swiftype App Search API"
  },
  "host": "host-n16af4.api.swiftype.com",
  "basePath": "/api/as/v1",
  "tags": [
    {
      "name": "Synonyms API",
      "description": "Synonym management"
    },
    {
      "name": "Engines API",
      "description": "Engine management"
    }
  ],
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/engines": {
      "get": {
        "tags": ["Engines API"],
        "summary": "List all Engines",
        "operationId": "listEngines",
        "parameters": [
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/pageCurrent"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Engine"
                  }
                }
              },
              "example": {
                "meta": {
                  "page": {
                    "current": 1,
                    "size": 10,
                    "total_pages": 10,
                    "total_results": 100
                  }
                },
                "results": [
                  {
                    "name": "rent-a-car",
                    "type": "default",
                    "language": "en"
                  },
                  {
                    "name": "national-parks",
                    "type": "default",
                    "language": null
                  }
                ]
              }
            }
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      },
      "post": {
        "tags": ["Engines API"],
        "summary": "Create an Engine",
        "operationId": "createEngine",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Engine"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Engine"
            }
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      }
    },
    "/engines/{engine_name}": {
      "get": {
        "tags": ["Engines API"],
        "summary": "Get an Engine",
        "operationId": "getEngine",
        "parameters": [
          {
            "$ref": "#/parameters/engineNameParam"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Engine"
            }
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      },
      "delete": {
        "tags": ["Engines API"],
        "summary": "Destroy an single Engine",
        "operationId": "destroyEngine",
        "parameters": [
          {
            "$ref": "#/parameters/engineNameParam"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK"
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      }
    },
    "/engines/{engine_name}/synonyms": {
      "parameters": [
        {
          "$ref": "#/parameters/engineNameParam"
        }
      ],
      "get": {
        "tags": ["Synonyms API"],
        "summary": "List all Synonym Sets",
        "operationId": "listSynonyms",
        "parameters": [
          {
            "$ref": "#/parameters/pageSizeParam"
          },
          {
            "$ref": "#/parameters/pageCurrent"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "meta": {
                  "$ref": "#/definitions/Meta"
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SynonymSet"
                  }
                }
              },
              "example": {
                "meta": {
                  "page": {
                    "current": 1,
                    "size": 10,
                    "total_pages": 10,
                    "total_results": 100
                  }
                },
                "results": [
                  {
                    "synonyms": ["cool car", "PT Cruiser"],
                    "id": "syn-5b31513b14cc8a6f243e1f5c"
                  },
                  {
                    "synonyms": ["cool car", "PT Cruiser"],
                    "id": "syn-5b31513b14cc8a6f243e1f5c"
                  }
                ]
              }
            }
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      },
      "post": {
        "tags": ["Synonyms API"],
        "summary": "Create a Synonym Set",
        "operationId": "createSynonym",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SynonymSet"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SynonymSet"
            }
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      }
    },
    "/engines/{engine_name}/synonyms/{id}": {
      "get": {
        "tags": ["Synonyms API"],
        "summary": "Get a single Synonym Set",
        "operationId": "getSynonym",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of synonym set",
            "required": true,
            "type": "string",
            "x-example": "syn-5b31513b14cc8a6f243e1f5c"
          },
          {
            "$ref": "#/parameters/engineNameParam"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SynonymSet"
            }
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      },
      "delete": {
        "tags": ["Synonyms API"],
        "summary": "Destroy a Synonym Set",
        "operationId": "destroySynonym",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of synonym set",
            "required": true,
            "type": "string",
            "x-example": "syn-5b31513b14cc8a6f243e1f5c"
          },
          {
            "$ref": "#/parameters/engineNameParam"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/UnauthorizedResponse"
          },
          "200": {
            "$ref": "#/responses/DeletedOK"
          },
          "default": {
            "$ref": "#/responses/Unexpected"
          }
        }
      }
    }
  },
  "definitions": {
    "Page": {
      "properties": {
        "current": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "default": 1
        },
        "total_pages": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "readOnly": true
        },
        "total_results": {
          "type": "integer",
          "format": "int32",
          "example": 100,
          "readOnly": true
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "example": 10,
          "default": 20
        }
      },
      "example": {
        "current": 1,
        "size": 10,
        "total_pages": 10,
        "total_results": 100
      }
    },
    "Meta": {
      "properties": {
        "page": {
          "$ref": "#/definitions/Page"
        }
      },
      "example": {
        "page": {
          "current": 1,
          "size": 10,
          "total_pages": 10,
          "total_results": 100
        }
      }
    },
    "SynonymSet": {
      "required": ["synonyms"],
      "properties": {
        "id": {
          "type": "string",
          "example": "syn-5b31513b14cc8a6f243e1f5c",
          "readOnly": true
        },
        "synonyms": {
          "type": "array",
          "example": ["cool car", "PT Cruiser"],
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "synonyms": ["cool car", "PT Cruiser"],
        "id": "syn-5b31513b14cc8a6f243e1f5c"
      }
    },
    "Deleted": {
      "properties": {
        "deleted": {
          "type": "boolean"
        }
      },
      "example": {
        "deleted": true
      }
    },
    "Error": {
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "example": {
        "error": "There was an error"
      }
    },
    "Errors": {
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "errors": ["There were errors", "and more errors"]
      }
    },
    "Engine": {
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      },
      "example": {
        "name": "test-engine",
        "type": "default",
        "language": null
      }
    }
  },
  "parameters": {
    "pageCurrent": {
      "name": "page[current]",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "x-example": "1",
      "default": "1"
    },
    "pageSizeParam": {
      "name": "page[size]",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "x-example": "20",
      "default": "20"
    },
    "engineNameParam": {
      "name": "engine_name",
      "in": "path",
      "description": "Name of engine",
      "required": true,
      "type": "string",
      "x-example": "rent-a-car"
    }
  },
  "responses": {
    "ErrorsResponse": {
      "description": "A list of errors",
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "UnauthorizedResponse": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      },
      "examples": {
        "application/json": {
          "error": "You need to sign in or sign up before continuing."
        }
      }
    },
    "BadRequestResponse": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "NotFoundResponse": {
      "description": "Not Found",
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "DeletedOK": {
      "description": "OK",
      "schema": {
        "$ref": "#/definitions/Deleted"
      }
    },
    "Unexpected": {
      "description": "Any Other Error",
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    }
  }
}
